package com.rachel.computervisionproject28042021;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.AppCompatSpinner;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.mlkit.nl.smartreply.SmartReply;
import com.google.mlkit.nl.smartreply.SmartReplyGenerator;
import com.google.mlkit.nl.smartreply.SmartReplySuggestion;
import com.google.mlkit.nl.smartreply.SmartReplySuggestionResult;
import com.google.mlkit.nl.smartreply.TextMessage;

import java.util.ArrayList;
import java.util.List;

/*
* Created by:
* רחל שורץ
* יועד גדות
* */

public class MainActivity extends AppCompatActivity {

    LinearLayout layoutList;
    ArrayList<String> conversationArray = new ArrayList<>();
    EditText userInput;
    ArrayAdapter arrayAdapter;
    List<TextMessage> conversationHistory;
    ListView conversationString;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        conversationHistory = new ArrayList<>();
        layoutList = findViewById(R.id.layout_list); // will contain the conversation
        userInput = findViewById(R.id.inputFromUser);

        View localUserReply = getLayoutInflater().inflate(R.layout.localuserreply, null, false);
        conversationString = localUserReply.findViewById(R.id.textMessages);
        arrayAdapter = new ArrayAdapter(this,android.R.layout.simple_list_item_1,conversationArray);
        conversationString.setAdapter(arrayAdapter);
        layoutList.addView(localUserReply);
    }

    public void sendButtonAction(View view) {
        // will make keyboard disappear once button is pressedu
        InputMethodManager mgr = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        mgr.hideSoftInputFromWindow(userInput.getWindowToken(), 0);

        String currentInputFromUser = userInput.getText().toString();
        // delete message already sent from text box
        userInput.setText("");

        // add user message to array of conversation
        TextView user = new TextView(this);
        user.setText(currentInputFromUser);
        conversationArray.add("Me: " + currentInputFromUser);

        // update the ui to show last message
        arrayAdapter.notifyDataSetChanged();

        // add message to conversation history
        conversationHistory.add(TextMessage.createForLocalUser(currentInputFromUser, System.currentTimeMillis()));
        // request auto generated reply
        getRemoteUserAutoGeneratedReply();
    }

    public void getRemoteUserAutoGeneratedReply(){
        SmartReplyGenerator smartReply = SmartReply.getClient();
        smartReply.suggestReplies(conversationHistory)
                .addOnSuccessListener(new OnSuccessListener() {
                    @Override
                    public void onSuccess(Object o) {
                        SmartReplySuggestionResult result = (SmartReplySuggestionResult)o;
                        if (result.getStatus() == SmartReplySuggestionResult.STATUS_NOT_SUPPORTED_LANGUAGE) {
                            Toast.makeText(getApplicationContext(), "Unsupported language", Toast.LENGTH_LONG).show();
                        } else if (result.getStatus() == SmartReplySuggestionResult.STATUS_SUCCESS) {
                            String remoteAutoReply = result.getSuggestions().get(result.getSuggestions().size()-1).getText().toString();
                            // add auto response to conversation texts
                            conversationArray.add("Remote Friend: " + remoteAutoReply);

                            // colors the user's responses:
                            conversationString.getChildAt(conversationString.getLastVisiblePosition()).setBackgroundColor(getColor(R.color.material_on_background_emphasis_high_type));

                            // notifies the ui that an item was added to the adapter array
                            arrayAdapter.notifyDataSetChanged();

                            // adds auto response to conversation history
                            conversationHistory.add(TextMessage.createForRemoteUser(remoteAutoReply, System.currentTimeMillis(), "Remote Friend"));
                        }
                    }

                })
                .addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        Toast.makeText(getApplicationContext(), "Failed to load", Toast.LENGTH_LONG).show();

                    }
                });
    }
}